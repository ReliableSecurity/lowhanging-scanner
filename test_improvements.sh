#!/bin/bash

# ========================================================================
# AKUMA'S IMPROVEMENT TESTER - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
# ========================================================================

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${RED}üî• TESTING SCANNER IMPROVEMENTS üî•${NC}"
echo ""

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ö–æ—Å—Ç—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —É–∫–∞–∑–∞—Ç—å)
if [[ $# -eq 0 ]]; then
    echo -e "${RED}Usage: $0 <host1> [host2] [host3] ...${NC}"
    echo "Example: $0 192.168.1.10 192.168.1.20 10.0.0.5"
    exit 1
fi

TEST_HOSTS=("$@")

RESULTS_DIR="/tmp/improvement_test_$(date +%H%M%S)"
mkdir -p "$RESULTS_DIR"

echo -e "${CYAN}Testing improved vulnerability detection...${NC}"

# –¢–µ—Å—Ç 1: SMBGhost detection —Å –Ω–æ–≤—ã–º –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º
echo -e "${YELLOW}[TEST 1] SMBGhost Detection${NC}"
for host in "${TEST_HOSTS[@]}"; do
    echo -n "Testing $host: "
    
    nxc_output=$(timeout 30 nxc smb "$host" -M smbghost 2>/dev/null)
    
    # –ù–æ–≤—ã–π —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
    if echo "$nxc_output" | grep -qi "vulnerable\|potentially vulnerable\|smbghost.*vulnerable\|cve-2020-0796"; then
        echo -e "${RED}VULNERABLE${NC}"
        echo "$host - SMBGhost VULNERABLE" >> "$RESULTS_DIR/vulnerabilities.txt"
    else
        echo -e "${GREEN}Not vulnerable${NC}"
    fi
done

echo ""

# –¢–µ—Å—Ç 2: MS17-010 detection
echo -e "${YELLOW}[TEST 2] MS17-010 Detection${NC}"
for host in "${TEST_HOSTS[@]}"; do
    echo -n "Testing $host: "
    
    nxc_output=$(timeout 30 nxc smb "$host" -M ms17-010 2>/dev/null)
    
    # –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è MS17-010
    if echo "$nxc_output" | grep -qi "vulnerable\|ms17-010.*vulnerable\|eternalblue"; then
        echo -e "${RED}VULNERABLE${NC}"
        echo "$host - MS17-010 VULNERABLE" >> "$RESULTS_DIR/vulnerabilities.txt"
    else
        echo -e "${GREEN}Not vulnerable${NC}"
    fi
done

echo ""

# –¢–µ—Å—Ç 3: General host info
echo -e "${YELLOW}[TEST 3] Host Information${NC}"
for host in "${TEST_HOSTS[@]}"; do
    echo -e "${CYAN}Host: $host${NC}"
    timeout 15 nxc smb "$host" 2>/dev/null | grep -E "(Windows|Build|domain|signing)" | head -1
    echo ""
done

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo -e "${GREEN}=== TEST RESULTS ===${NC}"
if [[ -f "$RESULTS_DIR/vulnerabilities.txt" ]]; then
    echo -e "${RED}VULNERABILITIES DETECTED:${NC}"
    cat "$RESULTS_DIR/vulnerabilities.txt"
else
    echo "No vulnerabilities detected with current patterns"
fi

echo ""
echo "Test results saved to: $RESULTS_DIR"

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å–∫–∞–Ω–µ—Ä –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
echo ""
echo -e "${CYAN}Run full scanner test? (y/n)${NC}"
read -r response
if [[ $response =~ ^[Yy]$ ]]; then
    echo "Running improved scanner on test subset..."
    
    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –ø–µ—Ä–≤—ã—Ö —Ç—Ä—ë—Ö —Ö–æ—Å—Ç–æ–≤
    cat > "$RESULTS_DIR/test_config.conf" << EOF
SUBNETS=(
EOF
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ö–æ—Å—Ç–∞ –≤ /32 –º–∞—Å–∫–∞—Ö
    for i in {0..2}; do
        if [[ -n "${TEST_HOSTS[i]}" ]]; then
            echo "    \"${TEST_HOSTS[i]}/32\"" >> "$RESULTS_DIR/test_config.conf"
        fi
    done
    cat >> "$RESULTS_DIR/test_config.conf" << EOF
)
MAX_PARALLEL=5
TIMEOUT_PER_HOST=60
DEBUG_MODE=true
EOF

    ./advanced_lowhanging_scanner.sh --config "$RESULTS_DIR/test_config.conf"
fi
